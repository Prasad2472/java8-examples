Full Binary Tree:(Source from Geeksforgeeks)

 A Binary Tree is a full binary tree if every node has 0 or 2 children. The following are the examples of a full binary tree.
 We can also say a full binary tree is a binary tree in which all nodes except leaf nodes have two children.
 
 #Complete Binary Tree:-
 A complete binary tree is just like a full binary tree, but with two major differences:
  Every level must be completely filled
  All the leaf elements must lean towards the left.
  The last leaf element might not have a right sibling i.e. a complete binary tree doesnâ€™t have to be a full binary tree.
  
 Perfect Binary Tree:-
 A Binary tree is a Perfect Binary Tree in which all the internal nodes have two children and all leaf nodes are at the same level. 
 Balanced Binary Tree:-
 A binary tree is balanced if the height of the tree is O(Log n) where n is the number of nodes. For Example, the AVL tree maintains O(Log n) height by making sure 
 that the difference between the heights of the left and right subtrees is at most 1. Red-Black trees maintain O(Log n) height by making sure that 
 the number of Black nodes on every root to leaf paths is the same and there are no adjacent red nodes.
 Balanced Binary Search trees are performance-wise good as they provide O(log n) time for search, insert and delete. 
 
 # A degenerate (or pathological) tree:-

A Tree where every internal node has one child. Such trees are performance-wise same as linked list. 

# Skewed Binary Tree:-

A skewed binary tree is a pathological/degenerate tree in which the tree is either dominated by the left nodes or the right nodes. Thus, 
there are two types of skewed binary tree: left-skewed binary tree and right-skewed binary tree.
